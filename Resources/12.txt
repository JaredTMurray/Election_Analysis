Sub AllStocksAnalysisRefactored()
    Dim startTime As Single
    Dim endTime  As Single
    
    
    yearValue = InputBox("What year would you like to run the analysis on?")

    startTime = Timer
    
    'Format the output sheet on All Stocks Analysis worksheet
    Worksheets("All Stocks Analysis").Activate
    
    Range("A1").Value = "All Stocks (" + yearValue + ")"
    
    'Create a header row
    Cells(3, 1).Value = "Ticker"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"

    'Initialize array of all tickers
    Dim tickers(12) As String
    
    tickers(0) = "AY"
    tickers(1) = "CSIQ"
    tickers(2) = "DQ"
    tickers(3) = "ENPH"
    tickers(4) = "FSLR"
    tickers(5) = "HASI"
    tickers(6) = "JKS"
    tickers(7) = "RUN"
    tickers(8) = "SEDG"
    tickers(9) = "SPWR"
    tickers(10) = "TERP"
    tickers(11) = "VSLR"
    
    'Activate data worksheet
    Worksheets("yearValue").Activate
    
    'Get the number of rows to loop over
    RowCount = Cells(rows.Count, "A").End(xlUp).Row
    
    '1a) Create a ticker Index
 		Dim tickerIndex As Long
    		tickerIndex = 0

    '1b) Create three output arrays

          'ticketVolumes_array
		Dim tickerVolumes(12) as Long
		tickerVolumes(0) = 123456
    		tickerVolumes(1) = 654321
    		tickerVolumes(2) = 456432
    		tickerVolumes(3) = 974214
    		tickerVolumes(4) = 135790
    		tickerVolumes(5) = 246802
    		tickerVolumes(6) = 902156
    		tickerVolumes(7) = 453610
    		tickerVolumes(8) = 455802
    		tickerVolumes(9) = 455203
    		tickerVolumes(10) = 302145
    		tickerVolumes(11) = 130845

           'ticketStartingPrices_array
    		Dim tickerStartingPrices(12) as Single
		tickerStartingPrices(0) = 10
		tickerStartingPrices(1) = 11
		tickerStartingPrices(2) = 12
		tickerStartingPrices(3) = 13
		tickerStartingPrices(4) = 18
		tickerStartingPrices(5) = 19
		tickerStartingPrices(6) = 13
		tickerStartingPrices(7) = 13
		tickerStartingPrices(8) = 18
		tickerStartingPrices(9) = 19
		tickerStartingPrices(10) = 13
		tickerStartingPrices(11) = 13

    	      'ticketEndingPrices_array
		Dim tickerEndingPrices(12) as Single
		tickerEndingPrices(0) = 53
		tickerEndingPrices(1) = 2
		tickerEndingPrices(2) = 11
		tickerEndingPrices(3) = 49
		tickerEndingPrices(4) = 17
		tickerEndingPrices(5) = 27
		tickerEndingPrices(6) = 70
		tickerEndingPrices(7) = 74
		tickerEndingPrices(8) = 21
		tickerEndingPrices(9) = 13
		tickerEndingPrices(10) = 42
		tickerEndingPrices(11) = 81
	

'2a) Create a for loop to initialize the tickerVolumes to zero.
		For i = 0 To 11
    			ticketVolumes(i) = 0
    		
'2b) Loop over all the rows in the spreadsheet.
    		Worksheets("yearValue").Activate
		For j = 2 To RowCount

    		
   
        '3a) Increase volume for current ticker
           
            If Cells(j, 1).Value = tickerIndex Then
            
                totalVolumes = totalVolumes + Cells(j, 8).Value
                    
            End If   


        '3b) Check if the current row is the first row with the selected tickerIndex.
        If  Cells(j - 1, 1).Value <> tickerIndex And Cells(j, 1).Value = tickerindex Then
       
       
                startTime = Cells(j, 6).Value

		End If
        
        '3c) check if the current row is the last row with the selected ticker
	  '3d Increase the tickerIndex.
         'If the next rowâ€™s ticker doesnâ€™t match, increase the tickerIndex.
            If Cells(j + 1, 1).Value <> tickerIndex And Cells(j, 1).Value = tickerIndex Then
    
    
            endTime = Cells(j, 6).Value
        
        
            End If
            
            
       Next j
    'Next i
    
    '4) Loop through your arrays to output the Ticker, Total Daily Volume, and Return.
    For i = 0 To 11
        
        Worksheets("All Stocks Analysis").Activate
        
        
    Next i
    
    'Formatting
    Worksheets("All Stocks Analysis").Activate
    Range("A3:C3").Font.FontStyle = "Bold"
    Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous
    Range("B4:B15").NumberFormat = "#,##0"
    Range("C4:C15").NumberFormat = "0.0%"
    Columns("B").AutoFit

    dataRowStart = 4
    dataRowEnd = 15

    For i = dataRowStart To dataRowEnd
        
        If Cells(i, 3) > 0 Then
            
            Cells(i, 3).Interior.Color = vbGreen
            
        Else
        
            Cells(i, 3).Interior.Color = vbRed
            
        End If
        
    Next i
 
    endTime = Timer
    MsgBox "This code ran in " & (endTime - startTime) & " seconds for the year " & (yearValue)

End Sub
